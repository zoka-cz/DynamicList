@model System.Collections.IList
@addTagHelper *, Zoka.AspNetCore.Components.DynamicList


@inject Microsoft.AspNetCore.Mvc.ViewEngines.ICompositeViewEngine ViewEngine

@{
	var model_type = ViewData.ModelMetadata.ModelType;
	if (model_type.Name != "List`1" && model_type.Namespace != "System.Collections.Generic")
	{
		throw new NotSupportedException("Model must be of List<T> type");
	}
	var item_type = model_type.GenericTypeArguments[0];

	int i = 0;
	string item_row_partial, add_item_partial;

	if (ViewData.ModelMetadata.AdditionalValues.ContainsKey("DynamicListItemTemplatePartial") &&
		ViewEngine.FindView(ViewContext, (string)ViewData.ModelMetadata.AdditionalValues["DynamicListItemTemplatePartial"], false).Success)
	{
		item_row_partial = (string)ViewData.ModelMetadata.AdditionalValues["DynamicListItemTemplatePartial"];
	}
	else
	{
		item_row_partial = "_DynamicListDefaultRowPartial";
	}

	if (ViewData.ModelMetadata.AdditionalValues.ContainsKey("DynamicListAddItemTemplatePartial") &&
		ViewEngine.FindView(ViewContext, (string)ViewData.ModelMetadata.AdditionalValues["DynamicListAddItemTemplatePartial"], false).Success)
	{
		add_item_partial = (string)ViewData.ModelMetadata.AdditionalValues["DynamicListAddItemTemplatePartial"];
	}
	else
	{
		add_item_partial = "_DynamicListDefaultAddRowPartial";
	}

	var html_id = "DynamicList_" + Html.GenerateIdFromName(ViewData.TemplateInfo.GetFullHtmlFieldName(""));
}

<div class="DynamicList" id="@html_id">

	<div class="DynamicList-Rows">
		@foreach (var item in Model)
		{
			@Html.Partial(
				item_row_partial,
				item,
				new ViewDataDictionary(ViewData.ModelMetadata, ViewData.ModelState) {
					{ "ItemIndex", i++ },
					{ "HtmlFieldPrefix", $"{ViewData.TemplateInfo.HtmlFieldPrefix}" }
				}
			)
		}
	</div>
	@Html.Partial(add_item_partial)

</div>

<template-scripts key-name="DynamicListScripts">
	<script>
		$("#@html_id").DynamicList("@item_type.AssemblyQualifiedName", "@ViewData.TemplateInfo.GetFullHtmlFieldName("")", {});
	</script>
</template-scripts>